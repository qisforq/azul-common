syntax = "proto3";

option java_multiple_files = true;
option java_package = "foundation.paleblue.azul.proto";
option java_outer_classname = "AzulProto";

package azul;

// Discuss: Should we put everything into one service for now?
//          Should we break things into separate services?
// e.g. "Invitations" vs "Azul"

service Azul {
  rpc Login (LoginRequest) returns (LoginReply) {}
  rpc GenerateInvite (GenerateInviteRequest) returns (GenerateInviteReply) {}
  rpc RedeemInvite (RedeemInviteRequest) returns (RedeemInviteReply) {}
  rpc InviteStatus (InviteStatusRequest) returns (InviteStatusReply) {}
  rpc RegisterForPush (RegisterForPushRequest) returns (RegisterForPushReply) {}
}

// General Types

message Location {
  double latitude = 1;
  double longitude = 2;
}

// Message Types

message LoginRequest {
  string username = 1;
  string password = 2;
}

message LoginReply {
  enum LoginReplyStatus {
    LOGIN_FAILURE = 0;
    LOGIN_SUCCESS = 1;
  }
  LoginReplyStatus status = 1;
  string sessionToken = 2;
}

message GenerateInviteRequest {
  string sessionToken = 1;
}

message GenerateInviteReply {
  string inviteCode = 1;
  string inviteUri = 2;
}

message RedeemInviteRequest {
  string username = 1;
  string password = 2;
  Location location = 3;
  string inviteCode = 4;
}

message RedeemInviteReply {
 enum RedeemInviteResult {
    SUCCESS = 0;
    USER_PRE_EXISTING = 1;
    ALREADY_REDEEMED = 2;
    INVITE_NOT_FOUND = 3;
  }

  RedeemInviteResult result = 1;
}

message InviteStatusRequest {
  string sessionToken = 1;
}

message InviteStatusReply {
  int32 invitesUsed = 1;
}

message RegisterForPushRequest {
  string sessionToken = 1;
  string firebaseMessagingToken = 2;
}

// The response message containing the greetings
message RegisterForPushReply {
 enum RegisterForPushResult {
    SUCCESS = 0;
    FAILURE = 1;
  }

  RegisterForPushResult result = 1;
}

